git-commit-mv(1)
================

NAME
----
git-commit-mv - git-commit with MontaVista extensions

SYNOPSIS
--------
[verse]
'git commit-mv' [[-c|-C] <commit> [-x]] [--bugz <defect list>]
		[--jira <defect list>] [--mr <defect list>]
		[--type <string>] [--disposition <string>]
		[--source <string>] [--changeid <hash>]
		[--no-edit] [--no-signoff] [--amend]
		[git-commit options]
'git commit-mv' --version

DESCRIPTION
-----------
'git commit-mv' is an extension on top of the standard 'git commit' command
that is aware of the MontaVista commit header format.

A commit generated with this command has the following format:

------------
Oneline summary of change, less then 60 characters

Source: MontaVista Software, LLC | URL | Some Guy <email@addr>
MR: <bugno>
Type: Defect Fix | Security Fix | Enhancement | Integration
Disposition: Submitted to | Needs submitting to | Merged from | Rejected by | Backport | Local | MontaVista
Description:

Verbose description of the change

Signed-off-by: Your Name <email@mvista.com>
------------

OPTIONS
-------
-C <commit>::
	Take existing commit object, and reuse the log message
	and the authorship information (including the timestamp)
	when creating the commit. 
-c <commit>::
	Same as -C <commit> above, but lets you edit the commit message. 
-x::
	Add a "(cherry picked from <commit>)" when used with the -c option.

--bugz <defect list>, --mr <defect list>, --jira <defect list>::
	Fill in the "MR:" field of the MontaVista commit header with <defect list>.
	<defect list> can be one or more (bugz numbers or Jira IDs), separated by
	commas.

--source <string>::
	Fill in the "Source:" field of the MontaVista commit header with the
	string specified in the command option.

--type <string>::
	Fill in the "Type:" field of the MontaVista commit header with the
	string specified in the command option.

--disposition <string>::
	Fill in the "Disposition:" field of the MontaVista commit header with the
	string specified in the command option.

--changeid <hash>::
	Don't use this option.  Let it be computed for you.  This
	option is intended for use by other commands/scripts.

--no-edit::
	Do not run $GIT_EDITOR to edit the commit message but instead simply
	commit the changes with the header generated via the command line
	options. This option is primarilly inteded for use by higher level
	automation scripts.

--no-signoff::
	Default behavior is to add a Signed-off-by: line to the end of the
	commit message.  This option disables that.

--amend::
	Instead of creating a new commit, amend the commit at the tip
	of the current branch by folding the current changes into it.

DISCUSSION
----------

Any other options specified on the command line are passed directly to
'git commit', such that one can do 'git commit-mv' [mv-options] -a' to commit
all local changes. Note that not all 'git commit' options are compatible
with 'git commit-mv'.

Note that the MontaVista-specific sub-header fields in the resultant
commit are partially validated and warning messages are printed, but
the commit is already completed.  'git commit-mv --amend' may be used
to modify the commit message.

SEE ALSO
--------
linkgit:git-commit[1]

Author
------
Originally written by Deepak Saxena <dsaxena@mvista.com>.
Re-implemented and enhanced by Dale Farnsworth <dfarnsworth@mvista.com>


MVGIT
-----
Part of the mvgit suite
